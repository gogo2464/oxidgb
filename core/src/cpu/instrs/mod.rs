/**
 * instrs.rs
 *
 * The primary switchboard for CPU instructions.
**/
mod utils;

mod jumps;
mod loads;
mod loads16;
mod special;

// ALU
mod bit;
mod bitrotation;
mod bitshift;
mod bitswap;
mod bitwise;
mod comparsions;
mod general;
mod increments;

use cpu::cpu::CPU;
use cpu::debugger;
use cpu;

use cpu::instrs::jumps::*;
use cpu::instrs::loads::*;
use cpu::instrs::loads16::*;
use cpu::instrs::special::*;

use cpu::instrs::bit::*;
use cpu::instrs::bitrotation::*;
use cpu::instrs::bitshift::*;
use cpu::instrs::bitswap::*;
use cpu::instrs::bitwise::*;
use cpu::instrs::comparsions::*;
use cpu::instrs::general::*;
use cpu::instrs::increments::*;

pub trait Machine {
    fn execute_instruction(&mut self, instr: u16, origin: u16) -> u8;
}

impl Machine for cpu::cpu::CPU <'_> {
    #[inline]
    fn execute_instruction(&mut self, instr: u16, origin: u16) -> u8 {
        match instr & 0xFF {
            0x00 => nop(cpu),
            0x01 => ld_bc_nnnn(cpu),
            0x02 => ld_pxx_x(cpu.regs.get_bc(), cpu.regs.a, cpu),
            0x03 => inc_bc(cpu),
            0x04 => inc_b(cpu),
            0x05 => dec_b(cpu),
            0x06 => ld_b_n(cpu),
            0x07 => rlca(cpu),
            0x08 => ld_pnn_sp(cpu),
            0x09 => add_hl_x(cpu.regs.get_bc(), cpu),
            0x0A => ld_n_pxx(&cpu.mem, cpu.regs.get_bc(), &mut cpu.regs.a),
            0x0B => dec_bc(cpu),
            0x0C => inc_c(cpu),
            0x0D => dec_c(cpu),
            0x0E => ld_c_n(cpu),
            0x0F => rrca(cpu),
            0x10 => stop(cpu),
            0x11 => ld_de_nn(cpu),
            0x12 => ld_pxx_x(cpu.regs.get_de(), cpu.regs.a, cpu),
            0x13 => inc_de(cpu),
            0x14 => inc_d(cpu),
            0x15 => dec_d(cpu),
            0x16 => ld_d_n(cpu),
            0x17 => rla(cpu),
            0x18 => jr_n(cpu),
            0x19 => add_hl_x(cpu.regs.get_de(), cpu),
            0x1A => ld_n_pxx(&cpu.mem, cpu.regs.get_de(), &mut cpu.regs.a),
            0x1B => dec_de(cpu),
            0x1C => inc_e(cpu),
            0x1D => dec_e(cpu),
            0x1E => ld_e_n(cpu),
            0x1F => rra(cpu),
            0x20 => jr_nz_n(cpu),
            0x21 => ld_hl_nnnn(cpu),
            0x22 => ldi_phl_a(cpu),
            0x23 => inc_hl(cpu),
            0x24 => inc_h(cpu),
            0x25 => dec_h(cpu),
            0x26 => ld_h_n(cpu),
            0x27 => daa(cpu),
            0x28 => jr_z_n(cpu),
            0x29 => add_hl_x(cpu.regs.get_hl(), cpu),
            0x2A => ldi_a_phl(cpu),
            0x2B => dec_hl(cpu),
            0x2C => inc_l(cpu),
            0x2D => dec_l(cpu),
            0x2E => ld_l_n(cpu),
            0x2F => cpl(cpu),
            0x30 => jr_nc_n(cpu),
            0x31 => ld_sp_nn(cpu),
            0x32 => ldd_phl_a(cpu),
            0x33 => inc_sp(cpu),
            0x34 => inc_phl(cpu),
            0x35 => dec_phl(cpu),
            0x36 => ld_phl_n(cpu),
            0x37 => scf(cpu),
            0x38 => jr_c_n(cpu),
            0x39 => add_hl_x(cpu.regs.sp, cpu),
            0x3A => ldd_a_phl(cpu),
            0x3B => dec_sp(cpu),
            0x3C => inc_a(cpu),
            0x3D => dec_a(cpu),
            0x3E => ld_a_n(cpu),
            0x3F => ccf(cpu),
            0x40 => ld_x_y(cpu.regs.b, &mut cpu.regs.b),
            0x41 => ld_x_y(cpu.regs.c, &mut cpu.regs.b),
            0x42 => ld_x_y(cpu.regs.d, &mut cpu.regs.b),
            0x43 => ld_x_y(cpu.regs.e, &mut cpu.regs.b),
            0x44 => ld_x_y(cpu.regs.h, &mut cpu.regs.b),
            0x45 => ld_x_y(cpu.regs.l, &mut cpu.regs.b),
            0x46 => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.b),
            0x47 => ld_x_y(cpu.regs.a, &mut cpu.regs.b),
            0x48 => ld_x_y(cpu.regs.b, &mut cpu.regs.c),
            0x49 => ld_x_y(cpu.regs.c, &mut cpu.regs.c),
            0x4A => ld_x_y(cpu.regs.d, &mut cpu.regs.c),
            0x4B => ld_x_y(cpu.regs.e, &mut cpu.regs.c),
            0x4C => ld_x_y(cpu.regs.h, &mut cpu.regs.c),
            0x4D => ld_x_y(cpu.regs.l, &mut cpu.regs.c),
            0x4E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.c),
            0x4F => ld_x_y(cpu.regs.a, &mut cpu.regs.c),
            0x50 => ld_x_y(cpu.regs.b, &mut cpu.regs.d),
            0x51 => ld_x_y(cpu.regs.c, &mut cpu.regs.d),
            0x52 => ld_x_y(cpu.regs.d, &mut cpu.regs.d),
            0x53 => ld_x_y(cpu.regs.e, &mut cpu.regs.d),
            0x54 => ld_x_y(cpu.regs.h, &mut cpu.regs.d),
            0x55 => ld_x_y(cpu.regs.l, &mut cpu.regs.d),
            0x56 => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.d),
            0x57 => ld_x_y(cpu.regs.a, &mut cpu.regs.d),
            0x58 => ld_x_y(cpu.regs.b, &mut cpu.regs.e),
            0x59 => ld_x_y(cpu.regs.c, &mut cpu.regs.e),
            0x5A => ld_x_y(cpu.regs.d, &mut cpu.regs.e),
            0x5B => ld_x_y(cpu.regs.e, &mut cpu.regs.e),
            0x5C => ld_x_y(cpu.regs.h, &mut cpu.regs.e),
            0x5D => ld_x_y(cpu.regs.l, &mut cpu.regs.e),
            0x5E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.e),
            0x5F => ld_x_y(cpu.regs.a, &mut cpu.regs.e),
            0x60 => ld_x_y(cpu.regs.b, &mut cpu.regs.h),
            0x61 => ld_x_y(cpu.regs.c, &mut cpu.regs.h),
            0x62 => ld_x_y(cpu.regs.d, &mut cpu.regs.h),
            0x63 => ld_x_y(cpu.regs.e, &mut cpu.regs.h),
            0x64 => ld_x_y(cpu.regs.h, &mut cpu.regs.h),
            0x65 => ld_x_y(cpu.regs.l, &mut cpu.regs.h),
            0x66 => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.h),
            0x67 => ld_x_y(cpu.regs.a, &mut cpu.regs.h),
            0x68 => ld_x_y(cpu.regs.b, &mut cpu.regs.l),
            0x69 => ld_x_y(cpu.regs.c, &mut cpu.regs.l),
            0x6A => ld_x_y(cpu.regs.d, &mut cpu.regs.l),
            0x6B => ld_x_y(cpu.regs.e, &mut cpu.regs.l),
            0x6C => ld_x_y(cpu.regs.h, &mut cpu.regs.l),
            0x6D => ld_x_y(cpu.regs.l, &mut cpu.regs.l),
            0x6E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.l),
            0x6F => ld_x_y(cpu.regs.a, &mut cpu.regs.l),
            0x70 => ld_phl_x(cpu.regs.b, cpu),
            0x71 => ld_phl_x(cpu.regs.c, cpu),
            0x72 => ld_phl_x(cpu.regs.d, cpu),
            0x73 => ld_phl_x(cpu.regs.e, cpu),
            0x74 => ld_phl_x(cpu.regs.h, cpu),
            0x75 => ld_phl_x(cpu.regs.l, cpu),
            0x76 => halt(cpu),
            0x77 => ld_phl_x(cpu.regs.a, cpu),
            0x78 => ld_x_y(cpu.regs.b, &mut cpu.regs.a),
            0x79 => ld_x_y(cpu.regs.c, &mut cpu.regs.a),
            0x7A => ld_x_y(cpu.regs.d, &mut cpu.regs.a),
            0x7B => ld_x_y(cpu.regs.e, &mut cpu.regs.a),
            0x7C => ld_x_y(cpu.regs.h, &mut cpu.regs.a),
            0x7D => ld_x_y(cpu.regs.l, &mut cpu.regs.a),
            0x7E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.a),
            0x7F => ld_x_y(cpu.regs.a, &mut cpu.regs.a),
            0x80 => add_b(cpu),
            0x81 => add_c(cpu),
            0x82 => add_d(cpu),
            0x83 => add_e(cpu),
            0x84 => add_h(cpu),
            0x85 => add_l(cpu),
            0x86 => add_a_phl(cpu),
            0x87 => add_a(cpu),
            0x88 => adc_b(cpu),
            0x89 => adc_c(cpu),
            0x8A => adc_d(cpu),
            0x8B => adc_e(cpu),
            0x8C => adc_h(cpu),
            0x8D => adc_l(cpu),
            0x8E => adc_a_phl(cpu),
            0x8F => adc_a(cpu),
            0x90 => sub_b(cpu),
            0x91 => sub_c(cpu),
            0x92 => sub_d(cpu),
            0x93 => sub_e(cpu),
            0x94 => sub_h(cpu),
            0x95 => sub_l(cpu),
            0x96 => sub_phl(cpu),
            0x97 => sub_a(cpu),
            0x98 => sbc_b(cpu),
            0x99 => sbc_c(cpu),
            0x9A => sbc_d(cpu),
            0x9B => sbc_e(cpu),
            0x9C => sbc_h(cpu),
            0x9D => sbc_l(cpu),
            0x9E => sbc_phl(cpu),
            0x9F => sbc_a(cpu),
            0xA0 => and(cpu.regs.b, cpu),
            0xA1 => and(cpu.regs.c, cpu),
            0xA2 => and(cpu.regs.d, cpu),
            0xA3 => and(cpu.regs.e, cpu),
            0xA4 => and(cpu.regs.h, cpu),
            0xA5 => and(cpu.regs.l, cpu),
            0xA6 => and_phl(cpu),
            0xA7 => and(cpu.regs.a, cpu),
            0xA8 => xor(cpu.regs.b, cpu),
            0xA9 => xor(cpu.regs.c, cpu),
            0xAA => xor(cpu.regs.d, cpu),
            0xAB => xor(cpu.regs.e, cpu),
            0xAC => xor(cpu.regs.h, cpu),
            0xAD => xor(cpu.regs.l, cpu),
            0xAE => xor_hl(cpu),
            0xAF => xor(cpu.regs.a, cpu),
            0xB0 => or(cpu.regs.b, cpu),
            0xB1 => or(cpu.regs.c, cpu),
            0xB2 => or(cpu.regs.d, cpu),
            0xB3 => or(cpu.regs.e, cpu),
            0xB4 => or(cpu.regs.h, cpu),
            0xB5 => or(cpu.regs.l, cpu),
            0xB6 => or_phl(cpu),
            0xB7 => or(cpu.regs.a, cpu),
            0xB8 => cp(cpu.regs.b, cpu),
            0xB9 => cp(cpu.regs.c, cpu),
            0xBA => cp(cpu.regs.d, cpu),
            0xBB => cp(cpu.regs.e, cpu),
            0xBC => cp(cpu.regs.h, cpu),
            0xBD => cp(cpu.regs.l, cpu),
            0xBE => cp_phl(cpu),
            0xBF => cp(cpu.regs.a, cpu),
            0xC0 => ret_nz(cpu),
            0xC1 => pop_bc(cpu),
            0xC2 => jp_nz_nn(cpu),
            0xC3 => jmp_nn(cpu),
            0xC4 => call_nz_nn(cpu),
            0xC5 => push_bc(cpu),
            0xC6 => add_a_n(cpu),
            0xC7 => rst(cpu, 0x00),
            0xC8 => ret_z(cpu),
            0xC9 => ret(cpu),
            0xCA => jp_z_nn(cpu),
            0xCB => cb(cpu, instr, origin),
            0xCC => call_z_nn(cpu),
            0xCD => call_nn(cpu),
            0xCE => adc_a_n(cpu),
            0xCF => rst(cpu, 0x08),
            0xD0 => ret_nc(cpu),
            0xD1 => pop_de(cpu),
            0xD2 => jp_nc_nn(cpu),
            0xD3 => bad_instruction(instr),
            0xD4 => call_nc_nn(cpu),
            0xD5 => push_de(cpu),
            0xD6 => sub_a_n(cpu),
            0xD7 => rst(cpu, 0x10),
            0xD8 => ret_c(cpu),
            0xD9 => reti(cpu),
            0xDA => jp_c_nn(cpu),
            0xDB => bad_instruction(instr),
            0xDC => call_c_nn(cpu),
            0xDD => bad_instruction(instr),
            0xDE => sbc_n(cpu),
            0xDF => rst(cpu, 0x18),
            0xE0 => ldh_pn_a(cpu),
            0xE1 => pop_hl(cpu),
            0xE2 => ld_pc(cpu),
            0xE3 => bad_instruction(instr),
            0xE4 => bad_instruction(instr),
            0xE5 => push_hl(cpu),
            0xE6 => and_n(cpu),
            0xE7 => rst(cpu, 0x20),
            0xE8 => add_sp_ns(cpu),
            0xE9 => jmp_hl(cpu),
            0xEA => ld_pnn_a(cpu),
            0xEB => bad_instruction(instr),
            0xEC => bad_instruction(instr),
            0xED => bad_instruction(instr),
            0xEE => xor_n(cpu),
            0xEF => rst(cpu, 0x28),
            0xF0 => ldh_a_pn(cpu),
            0xF1 => pop_af(cpu),
            0xF2 => ld_a_ptrc(cpu),
            0xF3 => di(cpu),
            0xF4 => bad_instruction(instr),
            0xF5 => push_af(cpu),
            0xF6 => or_n(cpu),
            0xF7 => rst(cpu, 0x30),
            0xF8 => ldhl_sp_n(cpu),
            0xF9 => ld_sp_hl(cpu),
            0xFA => ld_a_pnn(cpu),
            0xFB => ei(cpu),
            0xFC => bad_instruction(instr),
            0xFD => bad_instruction(instr),
            0xFE => cp_n(cpu),
            0xFF => rst(cpu, 0x38),

            _ => {
                panic!("Unknown instruction: ${:02X} at ${:04X}", instr, origin);
            }
        }
    }
}
impl Machine for cpu::debugger::CPU <'_> {
    #[inline]
    fn execute_instruction(&mut self, instr: u16, origin: u16) -> u8 {
        match instr & 0xFF {
            0x00 => nop(cpu),
            0x01 => ld_bc_nnnn(cpu),
            0x02 => ld_pxx_x(cpu.regs.get_bc(), cpu.regs.a, cpu),
            0x03 => inc_bc(cpu),
            0x04 => inc_b(cpu),
            0x05 => dec_b(cpu),
            0x06 => ld_b_n(cpu),
            0x07 => rlca(cpu),
            0x08 => ld_pnn_sp(cpu),
            0x09 => add_hl_x(cpu.regs.get_bc(), cpu),
            0x0A => ld_n_pxx(&cpu.mem, cpu.regs.get_bc(), &mut cpu.regs.a),
            0x0B => dec_bc(cpu),
            0x0C => inc_c(cpu),
            0x0D => dec_c(cpu),
            0x0E => ld_c_n(cpu),
            0x0F => rrca(cpu),
            0x10 => stop(cpu),
            0x11 => ld_de_nn(cpu),
            0x12 => ld_pxx_x(cpu.regs.get_de(), cpu.regs.a, cpu),
            0x13 => inc_de(cpu),
            0x14 => inc_d(cpu),
            0x15 => dec_d(cpu),
            0x16 => ld_d_n(cpu),
            0x17 => rla(cpu),
            0x18 => jr_n(cpu),
            0x19 => add_hl_x(cpu.regs.get_de(), cpu),
            0x1A => ld_n_pxx(&cpu.mem, cpu.regs.get_de(), &mut cpu.regs.a),
            0x1B => dec_de(cpu),
            0x1C => inc_e(cpu),
            0x1D => dec_e(cpu),
            0x1E => ld_e_n(cpu),
            0x1F => rra(cpu),
            0x20 => jr_nz_n(cpu),
            0x21 => ld_hl_nnnn(cpu),
            0x22 => ldi_phl_a(cpu),
            0x23 => inc_hl(cpu),
            0x24 => inc_h(cpu),
            0x25 => dec_h(cpu),
            0x26 => ld_h_n(cpu),
            0x27 => daa(cpu),
            0x28 => jr_z_n(cpu),
            0x29 => add_hl_x(cpu.regs.get_hl(), cpu),
            0x2A => ldi_a_phl(cpu),
            0x2B => dec_hl(cpu),
            0x2C => inc_l(cpu),
            0x2D => dec_l(cpu),
            0x2E => ld_l_n(cpu),
            0x2F => cpl(cpu),
            0x30 => jr_nc_n(cpu),
            0x31 => ld_sp_nn(cpu),
            0x32 => ldd_phl_a(cpu),
            0x33 => inc_sp(cpu),
            0x34 => inc_phl(cpu),
            0x35 => dec_phl(cpu),
            0x36 => ld_phl_n(cpu),
            0x37 => scf(cpu),
            0x38 => jr_c_n(cpu),
            0x39 => add_hl_x(cpu.regs.sp, cpu),
            0x3A => ldd_a_phl(cpu),
            0x3B => dec_sp(cpu),
            0x3C => inc_a(cpu),
            0x3D => dec_a(cpu),
            0x3E => ld_a_n(cpu),
            0x3F => ccf(cpu),
            0x40 => ld_x_y(cpu.regs.b, &mut cpu.regs.b),
            0x41 => ld_x_y(cpu.regs.c, &mut cpu.regs.b),
            0x42 => ld_x_y(cpu.regs.d, &mut cpu.regs.b),
            0x43 => ld_x_y(cpu.regs.e, &mut cpu.regs.b),
            0x44 => ld_x_y(cpu.regs.h, &mut cpu.regs.b),
            0x45 => ld_x_y(cpu.regs.l, &mut cpu.regs.b),
            0x46 => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.b),
            0x47 => ld_x_y(cpu.regs.a, &mut cpu.regs.b),
            0x48 => ld_x_y(cpu.regs.b, &mut cpu.regs.c),
            0x49 => ld_x_y(cpu.regs.c, &mut cpu.regs.c),
            0x4A => ld_x_y(cpu.regs.d, &mut cpu.regs.c),
            0x4B => ld_x_y(cpu.regs.e, &mut cpu.regs.c),
            0x4C => ld_x_y(cpu.regs.h, &mut cpu.regs.c),
            0x4D => ld_x_y(cpu.regs.l, &mut cpu.regs.c),
            0x4E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.c),
            0x4F => ld_x_y(cpu.regs.a, &mut cpu.regs.c),
            0x50 => ld_x_y(cpu.regs.b, &mut cpu.regs.d),
            0x51 => ld_x_y(cpu.regs.c, &mut cpu.regs.d),
            0x52 => ld_x_y(cpu.regs.d, &mut cpu.regs.d),
            0x53 => ld_x_y(cpu.regs.e, &mut cpu.regs.d),
            0x54 => ld_x_y(cpu.regs.h, &mut cpu.regs.d),
            0x55 => ld_x_y(cpu.regs.l, &mut cpu.regs.d),
            0x56 => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.d),
            0x57 => ld_x_y(cpu.regs.a, &mut cpu.regs.d),
            0x58 => ld_x_y(cpu.regs.b, &mut cpu.regs.e),
            0x59 => ld_x_y(cpu.regs.c, &mut cpu.regs.e),
            0x5A => ld_x_y(cpu.regs.d, &mut cpu.regs.e),
            0x5B => ld_x_y(cpu.regs.e, &mut cpu.regs.e),
            0x5C => ld_x_y(cpu.regs.h, &mut cpu.regs.e),
            0x5D => ld_x_y(cpu.regs.l, &mut cpu.regs.e),
            0x5E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.e),
            0x5F => ld_x_y(cpu.regs.a, &mut cpu.regs.e),
            0x60 => ld_x_y(cpu.regs.b, &mut cpu.regs.h),
            0x61 => ld_x_y(cpu.regs.c, &mut cpu.regs.h),
            0x62 => ld_x_y(cpu.regs.d, &mut cpu.regs.h),
            0x63 => ld_x_y(cpu.regs.e, &mut cpu.regs.h),
            0x64 => ld_x_y(cpu.regs.h, &mut cpu.regs.h),
            0x65 => ld_x_y(cpu.regs.l, &mut cpu.regs.h),
            0x66 => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.h),
            0x67 => ld_x_y(cpu.regs.a, &mut cpu.regs.h),
            0x68 => ld_x_y(cpu.regs.b, &mut cpu.regs.l),
            0x69 => ld_x_y(cpu.regs.c, &mut cpu.regs.l),
            0x6A => ld_x_y(cpu.regs.d, &mut cpu.regs.l),
            0x6B => ld_x_y(cpu.regs.e, &mut cpu.regs.l),
            0x6C => ld_x_y(cpu.regs.h, &mut cpu.regs.l),
            0x6D => ld_x_y(cpu.regs.l, &mut cpu.regs.l),
            0x6E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.l),
            0x6F => ld_x_y(cpu.regs.a, &mut cpu.regs.l),
            0x70 => ld_phl_x(cpu.regs.b, cpu),
            0x71 => ld_phl_x(cpu.regs.c, cpu),
            0x72 => ld_phl_x(cpu.regs.d, cpu),
            0x73 => ld_phl_x(cpu.regs.e, cpu),
            0x74 => ld_phl_x(cpu.regs.h, cpu),
            0x75 => ld_phl_x(cpu.regs.l, cpu),
            0x76 => halt(cpu),
            0x77 => ld_phl_x(cpu.regs.a, cpu),
            0x78 => ld_x_y(cpu.regs.b, &mut cpu.regs.a),
            0x79 => ld_x_y(cpu.regs.c, &mut cpu.regs.a),
            0x7A => ld_x_y(cpu.regs.d, &mut cpu.regs.a),
            0x7B => ld_x_y(cpu.regs.e, &mut cpu.regs.a),
            0x7C => ld_x_y(cpu.regs.h, &mut cpu.regs.a),
            0x7D => ld_x_y(cpu.regs.l, &mut cpu.regs.a),
            0x7E => ld_x_phl(cpu.regs.get_hl(), &cpu.mem, &mut cpu.regs.a),
            0x7F => ld_x_y(cpu.regs.a, &mut cpu.regs.a),
            0x80 => add_b(cpu),
            0x81 => add_c(cpu),
            0x82 => add_d(cpu),
            0x83 => add_e(cpu),
            0x84 => add_h(cpu),
            0x85 => add_l(cpu),
            0x86 => add_a_phl(cpu),
            0x87 => add_a(cpu),
            0x88 => adc_b(cpu),
            0x89 => adc_c(cpu),
            0x8A => adc_d(cpu),
            0x8B => adc_e(cpu),
            0x8C => adc_h(cpu),
            0x8D => adc_l(cpu),
            0x8E => adc_a_phl(cpu),
            0x8F => adc_a(cpu),
            0x90 => sub_b(cpu),
            0x91 => sub_c(cpu),
            0x92 => sub_d(cpu),
            0x93 => sub_e(cpu),
            0x94 => sub_h(cpu),
            0x95 => sub_l(cpu),
            0x96 => sub_phl(cpu),
            0x97 => sub_a(cpu),
            0x98 => sbc_b(cpu),
            0x99 => sbc_c(cpu),
            0x9A => sbc_d(cpu),
            0x9B => sbc_e(cpu),
            0x9C => sbc_h(cpu),
            0x9D => sbc_l(cpu),
            0x9E => sbc_phl(cpu),
            0x9F => sbc_a(cpu),
            0xA0 => and(cpu.regs.b, cpu),
            0xA1 => and(cpu.regs.c, cpu),
            0xA2 => and(cpu.regs.d, cpu),
            0xA3 => and(cpu.regs.e, cpu),
            0xA4 => and(cpu.regs.h, cpu),
            0xA5 => and(cpu.regs.l, cpu),
            0xA6 => and_phl(cpu),
            0xA7 => and(cpu.regs.a, cpu),
            0xA8 => xor(cpu.regs.b, cpu),
            0xA9 => xor(cpu.regs.c, cpu),
            0xAA => xor(cpu.regs.d, cpu),
            0xAB => xor(cpu.regs.e, cpu),
            0xAC => xor(cpu.regs.h, cpu),
            0xAD => xor(cpu.regs.l, cpu),
            0xAE => xor_hl(cpu),
            0xAF => xor(cpu.regs.a, cpu),
            0xB0 => or(cpu.regs.b, cpu),
            0xB1 => or(cpu.regs.c, cpu),
            0xB2 => or(cpu.regs.d, cpu),
            0xB3 => or(cpu.regs.e, cpu),
            0xB4 => or(cpu.regs.h, cpu),
            0xB5 => or(cpu.regs.l, cpu),
            0xB6 => or_phl(cpu),
            0xB7 => or(cpu.regs.a, cpu),
            0xB8 => cp(cpu.regs.b, cpu),
            0xB9 => cp(cpu.regs.c, cpu),
            0xBA => cp(cpu.regs.d, cpu),
            0xBB => cp(cpu.regs.e, cpu),
            0xBC => cp(cpu.regs.h, cpu),
            0xBD => cp(cpu.regs.l, cpu),
            0xBE => cp_phl(cpu),
            0xBF => cp(cpu.regs.a, cpu),
            0xC0 => ret_nz(cpu),
            0xC1 => pop_bc(cpu),
            0xC2 => jp_nz_nn(cpu),
            0xC3 => jmp_nn(cpu),
            0xC4 => call_nz_nn(cpu),
            0xC5 => push_bc(cpu),
            0xC6 => add_a_n(cpu),
            0xC7 => rst(cpu, 0x00),
            0xC8 => ret_z(cpu),
            0xC9 => ret(cpu),
            0xCA => jp_z_nn(cpu),
            0xCB => cb(cpu, instr, origin),
            0xCC => call_z_nn(cpu),
            0xCD => call_nn(cpu),
            0xCE => adc_a_n(cpu),
            0xCF => rst(cpu, 0x08),
            0xD0 => ret_nc(cpu),
            0xD1 => pop_de(cpu),
            0xD2 => jp_nc_nn(cpu),
            0xD3 => bad_instruction(instr),
            0xD4 => call_nc_nn(cpu),
            0xD5 => push_de(cpu),
            0xD6 => sub_a_n(cpu),
            0xD7 => rst(cpu, 0x10),
            0xD8 => ret_c(cpu),
            0xD9 => reti(cpu),
            0xDA => jp_c_nn(cpu),
            0xDB => bad_instruction(instr),
            0xDC => call_c_nn(cpu),
            0xDD => bad_instruction(instr),
            0xDE => sbc_n(cpu),
            0xDF => rst(cpu, 0x18),
            0xE0 => ldh_pn_a(cpu),
            0xE1 => pop_hl(cpu),
            0xE2 => ld_pc(cpu),
            0xE3 => bad_instruction(instr),
            0xE4 => bad_instruction(instr),
            0xE5 => push_hl(cpu),
            0xE6 => and_n(cpu),
            0xE7 => rst(cpu, 0x20),
            0xE8 => add_sp_ns(cpu),
            0xE9 => jmp_hl(cpu),
            0xEA => ld_pnn_a(cpu),
            0xEB => bad_instruction(instr),
            0xEC => bad_instruction(instr),
            0xED => bad_instruction(instr),
            0xEE => xor_n(cpu),
            0xEF => rst(cpu, 0x28),
            0xF0 => ldh_a_pn(cpu),
            0xF1 => pop_af(cpu),
            0xF2 => ld_a_ptrc(cpu),
            0xF3 => di(cpu),
            0xF4 => bad_instruction(instr),
            0xF5 => push_af(cpu),
            0xF6 => or_n(cpu),
            0xF7 => rst(cpu, 0x30),
            0xF8 => ldhl_sp_n(cpu),
            0xF9 => ld_sp_hl(cpu),
            0xFA => ld_a_pnn(cpu),
            0xFB => ei(cpu),
            0xFC => bad_instruction(instr),
            0xFD => bad_instruction(instr),
            0xFE => cp_n(cpu),
            0xFF => rst(self, 0x38),

            _ => {
                panic!("Unknown instruction: ${:02X} at ${:04X}", instr, origin);
            }
        }
    }
}

#[inline]
fn cb(cpu: &mut CPU, instr: u16, origin: u16) -> u8 {
    match (instr >> 8) & 0xFF {
        0x00 => rlc_b(cpu),
        0x01 => rlc_c(cpu),
        0x02 => rlc_d(cpu),
        0x03 => rlc_e(cpu),
        0x04 => rlc_h(cpu),
        0x05 => rlc_l(cpu),
        0x06 => rlc_phl(cpu),
        0x07 => rlc_a(cpu),
        0x08 => rrc_b(cpu),
        0x09 => rrc_c(cpu),
        0x0A => rrc_d(cpu),
        0x0B => rrc_e(cpu),
        0x0C => rrc_h(cpu),
        0x0D => rrc_l(cpu),
        0x0E => rrc_phl(cpu),
        0x0F => rrc_a(cpu),
        0x10 => rl_b(cpu),
        0x11 => rl_c(cpu),
        0x12 => rl_d(cpu),
        0x13 => rl_e(cpu),
        0x14 => rl_h(cpu),
        0x15 => rl_l(cpu),
        0x16 => rl_phl(cpu),
        0x17 => rl_a(cpu),
        0x18 => rr_b(cpu),
        0x19 => rr_c(cpu),
        0x1A => rr_d(cpu),
        0x1B => rr_e(cpu),
        0x1C => rr_h(cpu),
        0x1D => rr_l(cpu),
        0x1E => rr_phl(cpu),
        0x1F => rr_a(cpu),
        0x20 => sla_b(cpu),
        0x21 => sla_c(cpu),
        0x22 => sla_d(cpu),
        0x23 => sla_e(cpu),
        0x24 => sla_h(cpu),
        0x25 => sla_l(cpu),
        0x26 => sla_phl(cpu),
        0x27 => sla_a(cpu),
        0x28 => sra_b(cpu),
        0x29 => sra_c(cpu),
        0x2A => sra_d(cpu),
        0x2B => sra_e(cpu),
        0x2C => sra_h(cpu),
        0x2D => sra_l(cpu),
        0x2E => sra_phl(cpu),
        0x2F => sra_a(cpu),
        0x30 => swap_b(cpu),
        0x31 => swap_c(cpu),
        0x32 => swap_d(cpu),
        0x33 => swap_e(cpu),
        0x34 => swap_h(cpu),
        0x35 => swap_l(cpu),
        0x36 => swap_phl(cpu),
        0x37 => swap_a(cpu),
        0x38 => srl_b(cpu),
        0x39 => srl_c(cpu),
        0x3A => srl_d(cpu),
        0x3B => srl_e(cpu),
        0x3C => srl_h(cpu),
        0x3D => srl_l(cpu),
        0x3E => srl_phl(cpu),
        0x3F => srl_a(cpu),
        0x40 => bit_b(cpu, 0),
        0x41 => bit_c(cpu, 0),
        0x42 => bit_d(cpu, 0),
        0x43 => bit_e(cpu, 0),
        0x44 => bit_h(cpu, 0),
        0x45 => bit_l(cpu, 0),
        0x46 => bit_phl(cpu, 0),
        0x47 => bit_a(cpu, 0),
        0x48 => bit_b(cpu, 1),
        0x49 => bit_c(cpu, 1),
        0x4A => bit_d(cpu, 1),
        0x4B => bit_e(cpu, 1),
        0x4C => bit_h(cpu, 1),
        0x4D => bit_l(cpu, 1),
        0x4E => bit_phl(cpu, 1),
        0x4F => bit_a(cpu, 1),
        0x50 => bit_b(cpu, 2),
        0x51 => bit_c(cpu, 2),
        0x52 => bit_d(cpu, 2),
        0x53 => bit_e(cpu, 2),
        0x54 => bit_h(cpu, 2),
        0x55 => bit_l(cpu, 2),
        0x56 => bit_phl(cpu, 2),
        0x57 => bit_a(cpu, 2),
        0x58 => bit_b(cpu, 3),
        0x59 => bit_c(cpu, 3),
        0x5A => bit_d(cpu, 3),
        0x5B => bit_e(cpu, 3),
        0x5C => bit_h(cpu, 3),
        0x5D => bit_l(cpu, 3),
        0x5E => bit_phl(cpu, 3),
        0x5F => bit_a(cpu, 3),
        0x60 => bit_b(cpu, 4),
        0x61 => bit_c(cpu, 4),
        0x62 => bit_d(cpu, 4),
        0x63 => bit_e(cpu, 4),
        0x64 => bit_h(cpu, 4),
        0x65 => bit_l(cpu, 4),
        0x66 => bit_phl(cpu, 4),
        0x67 => bit_a(cpu, 4),
        0x68 => bit_b(cpu, 5),
        0x69 => bit_c(cpu, 5),
        0x6A => bit_d(cpu, 5),
        0x6B => bit_e(cpu, 5),
        0x6C => bit_h(cpu, 5),
        0x6D => bit_l(cpu, 5),
        0x6E => bit_phl(cpu, 5),
        0x6F => bit_a(cpu, 5),
        0x70 => bit_b(cpu, 6),
        0x71 => bit_c(cpu, 6),
        0x72 => bit_d(cpu, 6),
        0x73 => bit_e(cpu, 6),
        0x74 => bit_h(cpu, 6),
        0x75 => bit_l(cpu, 6),
        0x76 => bit_phl(cpu, 6),
        0x77 => bit_a(cpu, 6),
        0x78 => bit_b(cpu, 7),
        0x79 => bit_c(cpu, 7),
        0x7A => bit_d(cpu, 7),
        0x7B => bit_e(cpu, 7),
        0x7C => bit_h(cpu, 7),
        0x7D => bit_l(cpu, 7),
        0x7E => bit_phl(cpu, 7),
        0x7F => bit_a(cpu, 7),
        0x80 => res_b(cpu, 0),
        0x81 => res_c(cpu, 0),
        0x82 => res_d(cpu, 0),
        0x83 => res_e(cpu, 0),
        0x84 => res_h(cpu, 0),
        0x85 => res_l(cpu, 0),
        0x86 => res_x_hl(cpu, 0),
        0x87 => res_a(cpu, 0),
        0x88 => res_b(cpu, 1),
        0x89 => res_c(cpu, 1),
        0x8A => res_d(cpu, 1),
        0x8B => res_e(cpu, 1),
        0x8C => res_h(cpu, 1),
        0x8D => res_l(cpu, 1),
        0x8E => res_x_hl(cpu, 1),
        0x8F => res_a(cpu, 1),
        0x90 => res_b(cpu, 2),
        0x91 => res_c(cpu, 2),
        0x92 => res_d(cpu, 2),
        0x93 => res_e(cpu, 2),
        0x94 => res_h(cpu, 2),
        0x95 => res_l(cpu, 2),
        0x96 => res_x_hl(cpu, 2),
        0x97 => res_a(cpu, 2),
        0x98 => res_b(cpu, 3),
        0x99 => res_c(cpu, 3),
        0x9A => res_d(cpu, 3),
        0x9B => res_e(cpu, 3),
        0x9C => res_h(cpu, 3),
        0x9D => res_l(cpu, 3),
        0x9E => res_x_hl(cpu, 3),
        0x9F => res_a(cpu, 3),
        0xA0 => res_b(cpu, 4),
        0xA1 => res_c(cpu, 4),
        0xA2 => res_d(cpu, 4),
        0xA3 => res_e(cpu, 4),
        0xA4 => res_h(cpu, 4),
        0xA5 => res_l(cpu, 4),
        0xA6 => res_x_hl(cpu, 4),
        0xA7 => res_a(cpu, 4),
        0xA8 => res_b(cpu, 5),
        0xA9 => res_c(cpu, 5),
        0xAA => res_d(cpu, 5),
        0xAB => res_e(cpu, 5),
        0xAC => res_h(cpu, 5),
        0xAD => res_l(cpu, 5),
        0xAE => res_x_hl(cpu, 5),
        0xAF => res_a(cpu, 5),
        0xB0 => res_b(cpu, 6),
        0xB1 => res_c(cpu, 6),
        0xB2 => res_d(cpu, 6),
        0xB3 => res_e(cpu, 6),
        0xB4 => res_h(cpu, 6),
        0xB5 => res_l(cpu, 6),
        0xB6 => res_x_hl(cpu, 6),
        0xB7 => res_a(cpu, 6),
        0xB8 => res_b(cpu, 7),
        0xB9 => res_c(cpu, 7),
        0xBA => res_d(cpu, 7),
        0xBB => res_e(cpu, 7),
        0xBC => res_h(cpu, 7),
        0xBD => res_l(cpu, 7),
        0xBE => res_x_hl(cpu, 7),
        0xBF => res_a(cpu, 7),
        0xC0 => set_b(cpu, 0),
        0xC1 => set_c(cpu, 0),
        0xC2 => set_d(cpu, 0),
        0xC3 => set_e(cpu, 0),
        0xC4 => set_h(cpu, 0),
        0xC5 => set_l(cpu, 0),
        0xC6 => set_x_hl(cpu, 0),
        0xC7 => set_a(cpu, 0),
        0xC8 => set_b(cpu, 1),
        0xC9 => set_c(cpu, 1),
        0xCA => set_d(cpu, 1),
        0xCB => set_e(cpu, 1),
        0xCC => set_h(cpu, 1),
        0xCD => set_l(cpu, 1),
        0xCE => set_x_hl(cpu, 1),
        0xCF => set_a(cpu, 1),
        0xD0 => set_b(cpu, 2),
        0xD1 => set_c(cpu, 2),
        0xD2 => set_d(cpu, 2),
        0xD3 => set_e(cpu, 2),
        0xD4 => set_h(cpu, 2),
        0xD5 => set_l(cpu, 2),
        0xD6 => set_x_hl(cpu, 2),
        0xD7 => set_a(cpu, 2),
        0xD8 => set_b(cpu, 3),
        0xD9 => set_c(cpu, 3),
        0xDA => set_d(cpu, 3),
        0xDB => set_e(cpu, 3),
        0xDC => set_h(cpu, 3),
        0xDD => set_l(cpu, 3),
        0xDE => set_x_hl(cpu, 3),
        0xDF => set_a(cpu, 3),
        0xE0 => set_b(cpu, 4),
        0xE1 => set_c(cpu, 4),
        0xE2 => set_d(cpu, 4),
        0xE3 => set_e(cpu, 4),
        0xE4 => set_h(cpu, 4),
        0xE5 => set_l(cpu, 4),
        0xE6 => set_x_hl(cpu, 4),
        0xE7 => set_a(cpu, 4),
        0xE8 => set_b(cpu, 5),
        0xE9 => set_c(cpu, 5),
        0xEA => set_d(cpu, 5),
        0xEB => set_e(cpu, 5),
        0xEC => set_h(cpu, 5),
        0xED => set_l(cpu, 5),
        0xEE => set_x_hl(cpu, 5),
        0xEF => set_a(cpu, 5),
        0xF0 => set_b(cpu, 6),
        0xF1 => set_c(cpu, 6),
        0xF2 => set_d(cpu, 6),
        0xF3 => set_e(cpu, 6),
        0xF4 => set_h(cpu, 6),
        0xF5 => set_l(cpu, 6),
        0xF6 => set_x_hl(cpu, 6),
        0xF7 => set_a(cpu, 6),
        0xF8 => set_b(cpu, 7),
        0xF9 => set_c(cpu, 7),
        0xFA => set_d(cpu, 7),
        0xFB => set_e(cpu, 7),
        0xFC => set_h(cpu, 7),
        0xFD => set_l(cpu, 7),
        0xFE => set_x_hl(cpu, 7),
        0xFF => set_a(cpu, 7),
        _ => {
            panic!(
                "Unknown CB instruction: ${:02X} at ${:04X}",
                (instr >> 8) & 0xFF,
                origin
            );
        }
    }
}
